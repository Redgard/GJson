$namespace=GJson

COMPILER Json

CHARACTERS

    digit    = "0123456789".
    digitH   = "123456789".
    hexCh    = "0123456789ABCDEFabcdef".
    cr       = '\r'.
    lf       = '\n'.
    tab      = '\t'.
    stringCh = ANY - '"' - '\\' - cr - lf.
    escCh    = "\"\\/bfnrt".
	
TOKENS

    Number = [ '-' ] ('0' | digitH { digit }) [ '.' { digit } ] [ ('e' | 'E') [ '+' | '-' ] digit { digit } ].
    CString = '"' { stringCh | '\\' escCh | "\\u" hexCh hexCh hexCh hexCh } '"'.
	Null = "null".
	True = "true".
	False = "false".
	QuotationMark = "\"".
	CurlyBracketOpen = "{".
	CurlyBracketClose = "}".
	SquareBracketOpen = "[".
	SquareBracketClose = "]".
	Colon = ":".
	Comma = ",".
	Tab = "\t".

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO lf
	
IGNORE cr + lf + tab

PRODUCTIONS

Json =
	Value.

String = CString (. Push<String>( t.val ); .).
	
Object = (. PushEmpty(); .)
	CurlyBracketOpen [ ObjectList ] CurlyBracketClose.

ObjectList =
	ObjectItem { Comma ObjectItem }.

ObjectItem =
	String Colon Value (. AddItemToObject(); .) .

Array = (. PushEmpty(); .)
	SquareBracketOpen [ ArrayList ] SquareBracketClose.

ArrayList =
	ArrayItem { Comma ArrayItem }.

ArrayItem = 
	Value (. AddItemToArray(); .) .

Value = 
( Object
	| Array
	| String
	| Number (. Push<Double>( t.val ); .)
	| True (. Push<Boolean>( t.val ); .)
	| False (. Push<Boolean>( t.val ); .)
	| Null (. PushEmpty(); .) ) .

END Json.
